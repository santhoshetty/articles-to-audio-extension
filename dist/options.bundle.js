(()=>{var H="ArticleToAudioDB";var g={ARTICLES:"articles",AUDIO:"audio",SETTINGS:"settings"};function D(){return new Promise((e,l)=>{let n=indexedDB.open(H,2);n.onerror=s=>{console.error("Database error:",s.target.error),l(s.target.error)},n.onsuccess=s=>{let r=s.target.result;console.log("Database opened successfully"),e(r)},n.onupgradeneeded=s=>{let r=s.target.result,d=s.oldVersion;if(console.log(`Database upgrade needed from version ${d} to 2`),d<1){if(!r.objectStoreNames.contains(g.ARTICLES)){let o=r.createObjectStore(g.ARTICLES,{keyPath:"id",autoIncrement:!0});o.createIndex("url","url",{unique:!0}),o.createIndex("title","title",{unique:!1}),o.createIndex("dateAdded","dateAdded",{unique:!1}),console.log("Articles store created")}if(!r.objectStoreNames.contains(g.AUDIO)){let o=r.createObjectStore(g.AUDIO,{keyPath:"id",autoIncrement:!0});o.createIndex("articleId","articleId",{unique:!1}),o.createIndex("type","type",{unique:!1}),o.createIndex("dateCreated","dateCreated",{unique:!1}),console.log("Audio store created")}if(!r.objectStoreNames.contains(g.SETTINGS)){let o=r.createObjectStore(g.SETTINGS,{keyPath:"key"});console.log("Settings store created")}}if(d<2&&(console.log("Upgrading to version 2: Removing URL uniqueness constraint"),r.objectStoreNames.contains(g.ARTICLES))){let o=s.target.transaction.objectStore(g.ARTICLES);o.indexNames.contains("url")&&o.deleteIndex("url"),o.createIndex("url","url",{unique:!1}),console.log("URL index updated to non-unique")}}})}async function w(){return await D()}async function K(e){let l=await w();return new Promise((n,s)=>{let r=l.transaction([g.ARTICLES],"readwrite"),d=r.objectStore(g.ARTICLES);e.dateAdded||(e.dateAdded=new Date().toISOString()),e.hasOwnProperty("url")||(e.url=null);let o=d.add(e);o.onsuccess=i=>{console.log("Article saved successfully with ID:",i.target.result),n(i.target.result)},o.onerror=i=>{if(console.error("Error saving article:",i.target.error),i.target.error.name==="ConstraintError"){console.log("Attempting to save with a modified URL to avoid uniqueness constraints");let y=new Date().getTime();e.url?e.url=`${e.url}#${y}`:e.url=`generated-url-${y}`;let m=d.add(e);m.onsuccess=p=>{console.log("Article saved with modified URL, ID:",p.target.result),n(p.target.result)},m.onerror=p=>{console.error("Failed to save article with modified URL:",p.target.error),s(p.target.error)}}else s(i.target.error)},r.oncomplete=()=>{l.close()}})}async function P(){let e=await w();return new Promise((l,n)=>{let s=e.transaction([g.ARTICLES],"readonly"),d=s.objectStore(g.ARTICLES).getAll();d.onsuccess=o=>{l(o.target.result)},d.onerror=o=>{console.error("Error getting articles:",o.target.error),n(o.target.error)},s.oncomplete=()=>{e.close()}})}async function M(e){let l=await w();return new Promise((n,s)=>{let r=l.transaction([g.AUDIO],"readwrite"),d=r.objectStore(g.AUDIO);e.dateCreated||(e.dateCreated=new Date().toISOString());let o=d.add(e);o.onsuccess=i=>{console.log("Audio saved successfully with ID:",i.target.result),n(i.target.result)},o.onerror=i=>{console.error("Error saving audio:",i.target.error),s(i.target.error)},r.oncomplete=()=>{l.close()}})}async function O(e){let l=await w();return new Promise((n,s)=>{let r=l.transaction([g.AUDIO],"readonly"),i=r.objectStore(g.AUDIO).index("articleId").getAll(e);i.onsuccess=y=>{n(y.target.result)},i.onerror=y=>{console.error("Error getting audio:",y.target.error),s(y.target.error)},r.oncomplete=()=>{l.close()}})}async function I(e,l){let n=await w();return new Promise((s,r)=>{let d=n.transaction([g.SETTINGS],"readwrite"),i=d.objectStore(g.SETTINGS).put({key:e,value:l});i.onsuccess=()=>{console.log(`Setting "${e}" saved successfully`),s(!0)},i.onerror=y=>{console.error(`Error saving setting "${e}":`,y.target.error),r(y.target.error)},d.oncomplete=()=>{n.close()}})}async function h(e){let l=await w();return new Promise((n,s)=>{let r=l.transaction([g.SETTINGS],"readonly"),o=r.objectStore(g.SETTINGS).get(e);o.onsuccess=i=>{let y=i.target.result;n(y?y.value:null)},o.onerror=i=>{console.error(`Error getting setting "${e}":`,i.target.error),s(i.target.error)},r.oncomplete=()=>{l.close()}})}async function R(){try{let e=await P(),l=[];for(let r of e){let d=await O(r.id);l.push(...d)}let n=await w(),s=await new Promise((r,d)=>{let o=n.transaction([g.SETTINGS],"readonly"),y=o.objectStore(g.SETTINGS).getAll();y.onsuccess=m=>{r(m.target.result)},y.onerror=m=>{console.error("Error getting settings:",m.target.error),d(m.target.error)},o.oncomplete=()=>{n.close()}});return{articles:e,audio:l,settings:s}}catch(e){throw console.error("Error exporting database:",e),e}}async function k(e){let l=await w();try{if(e.articles&&Array.isArray(e.articles))for(let n of e.articles)await K(n);if(e.audio&&Array.isArray(e.audio))for(let n of e.audio)await M(n);if(e.settings&&Array.isArray(e.settings))for(let n of e.settings)await I(n.key,n.value);return!0}catch(n){throw console.error("Error importing database:",n),n}}async function j(){try{let e=await P(),l=0,n=0;for(let r of e){let d=await O(r.id);l+=d.length;for(let o of d)o.blob&&(n+=o.blob.size)}let s=await w();return new Promise((r,d)=>{let o=s.transaction([g.AUDIO],"readonly"),y=o.objectStore(g.AUDIO).getAll();y.onsuccess=m=>{let p=m.target.result,v=0,a=p.length;for(let b of p)b.blob&&(v+=b.blob.size);r({articleCount:e.length,audioCount:a,totalAudioSize:v})},y.onerror=m=>{console.error("Error getting all audio files:",m.target.error),r({articleCount:e.length,audioCount:l,totalAudioSize:n})},o.oncomplete=()=>{s.close()}})}catch(e){throw console.error("Error getting database stats:",e),e}}document.addEventListener("DOMContentLoaded",async()=>{await D();let e=document.getElementById("openai-api-key"),l=document.getElementById("save-api-key"),n=document.getElementById("test-api-key"),s=document.getElementById("host-voice"),r=document.getElementById("cohost-voice"),d=document.getElementById("save-voice-settings"),o=document.getElementById("preview-host-voice"),i=document.getElementById("preview-cohost-voice"),y=document.getElementById("export-data"),m=document.getElementById("import-data"),p=document.getElementById("import-file"),v=document.getElementById("clear-data");b(),A(),l.addEventListener("click",q),n.addEventListener("click",U),d.addEventListener("click",N),o.addEventListener("click",z),i.addEventListener("click",G),y.addEventListener("click",$),m.addEventListener("click",()=>p.click()),p.addEventListener("change",V),v.addEventListener("click",_),window.addEventListener("focus",A),document.addEventListener("visibilitychange",()=>{document.visibilityState==="visible"&&A()});function a(t,c){let u=document.getElementById("status");u.textContent=t,u.className=`status ${c}`,u.style.display="block",setTimeout(()=>{u.style.display="none"},5e3)}async function b(){try{let t=await h("openai_api_key");t?(e.value=t,a("Settings loaded successfully","success")):a("Please set your OpenAI API key to use this extension","warning");let c=await h("host_voice");c?s.value=c:await I("host_voice",s.value);let u=await h("cohost_voice");u?r.value=u:await I("cohost_voice",r.value)}catch(t){console.error("Error loading settings:",t),a("Error loading settings: "+t.message,"error")}}async function q(){let t=e.value.trim();if(!t){a("Please enter a valid API key","error");return}try{await I("openai_api_key",t),a("API key saved successfully","success")}catch(c){console.error("Error saving API key:",c),a("Error saving API key: "+c.message,"error")}}async function U(){let t=e.value.trim();if(!t){a("Please enter an API key first","error");return}a("Testing API connection...","info");try{let c=await fetch("https://api.openai.com/v1/models",{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`}});if(c.ok)a("API connection successful!","success");else{let u=await c.json();a(`API connection failed: ${u.error.message}`,"error")}}catch(c){console.error("Error testing API connection:",c),a("Error testing API connection: "+c.message,"error")}}async function N(){try{await I("host_voice",s.value),await I("cohost_voice",r.value),a("Voice settings saved successfully","success")}catch(t){console.error("Error saving voice settings:",t),a("Error saving voice settings: "+t.message,"error")}}async function A(){try{let t=await j();document.getElementById("article-count").textContent=t.articleCount,document.getElementById("audio-count").textContent=t.audioCount;let c=(t.totalAudioSize/(1024*1024)).toFixed(2);document.getElementById("storage-used").textContent=`${c} MB`;let u=Math.min(100,t.totalAudioSize/(100*1024*1024)*100);document.getElementById("storage-bar-fill").style.width=`${u}%`,console.log("Storage stats updated:",t)}catch(t){console.error("Error updating storage stats:",t),a("Error updating storage statistics","error")}}async function $(){try{a("Preparing data for export...","info");let t=await R(),c=new Blob([JSON.stringify(t)],{type:"application/json"}),u=URL.createObjectURL(c),f=document.createElement("a");f.href=u,f.download=`article-to-audio-backup-${new Date().toISOString().split("T")[0]}.json`,document.body.appendChild(f),f.click(),document.body.removeChild(f),URL.revokeObjectURL(u),a("Data exported successfully","success")}catch(t){console.error("Error exporting data:",t),a("Error exporting data: "+t.message,"error")}}async function V(t){let c=t.target.files[0];if(c){try{a("Importing data...","info");let u=new FileReader;u.onload=async f=>{try{let S=JSON.parse(f.target.result);await k(S),a("Data imported successfully","success"),A()}catch(S){console.error("Error parsing import file:",S),a("Error parsing import file: "+S.message,"error")}},u.onerror=()=>{a("Error reading import file","error")},u.readAsText(c)}catch(u){console.error("Error importing data:",u),a("Error importing data: "+u.message,"error")}t.target.value=""}}async function _(){if(confirm("Are you sure you want to clear all data? This action cannot be undone!"))try{a("Clearing all data...","info");let t=indexedDB.deleteDatabase("ArticleToAudioDB");t.onsuccess=async()=>{await D(),A(),a("All data cleared successfully","success")},t.onerror=c=>{console.error("Error clearing data:",c.target.error),a("Error clearing data: "+c.target.error,"error")}}catch(t){console.error("Error clearing data:",t),a("Error clearing data: "+t.message,"error")}}async function z(){let t=s.value;await B(t)}async function G(){let t=r.value;await B(t)}async function B(t){try{let c={alloy:"Esha",echo:"Hari",fable:"Mira",onyx:"Tej",nova:"Leela",shimmer:"Veena"};a(`Loading ${c[t]} voice sample...`,"info");let u=await h("openai_api_key");if(!u)throw new Error("OpenAI API key not set. Please set your API key first.");let S={alloy:"Hi, I'm Esha. I am a versatile voice that can adapt to various content styles.",echo:"Hi, I'm Hari. I have a soft-spoken and articulate voice, ideal for educational content.",fable:"Hi, I'm Mira. I have a narration style that's great for storytelling and creative content.",onyx:"Hi, I'm Tej. I have a deep, authoritative voice suited for professional presentations.",nova:"Hi, I'm Leela. My voice is clear and energetic, good for delivering news or explanations.",shimmer:"Hi, I'm Veena. I have a warm, welcoming voice perfect for friendly conversations."}[t]||`This is a sample of the ${t} voice.`,L=document.querySelectorAll("#preview-host-voice, #preview-cohost-voice");L.forEach(E=>{E.disabled=!0,E.textContent="Loading..."});let T=await fetch("https://api.openai.com/v1/audio/speech",{method:"POST",headers:{Authorization:`Bearer ${u}`,"Content-Type":"application/json"},body:JSON.stringify({model:"tts-1",voice:t,input:S})});if(!T.ok){let E=await T.json();throw new Error(`OpenAI API error: ${T.status} - ${JSON.stringify(E)}`)}let F=await T.blob(),x=URL.createObjectURL(F),C=new Audio(x);C.onended=()=>{URL.revokeObjectURL(x),L.forEach(E=>{E.disabled=!1,E.textContent="Preview Voice"})},C.play(),a(`Playing ${c[t]} voice sample`,"success")}catch(c){console.error("Error playing voice sample:",c),a(`Error playing voice sample: ${c.message}`,"error"),document.querySelectorAll("#preview-host-voice, #preview-cohost-voice").forEach(f=>{f.disabled=!1,f.textContent="Preview Voice"})}}});})();
